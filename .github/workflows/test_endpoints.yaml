on: push
name: test endpoints
jobs:
  test:
    name: test endpoints
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0

    - name: Set up Python 3.10
      uses: actions/setup-python@bd6b4b6205c4dbad673328db7b31b7fab9e241c0 # v4.6.1
      with:
        python-version: '3.10'

    - name: Upgrade pip
      run: python -m pip install --upgrade pip

    - uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install poetry
      env:
        POETRY_VERSION: "1.3.2"
      run: pip install poetry==${POETRY_VERSION} && poetry --version

    - name: Install requirements
      run: poetry install --with test

    - name: Get python version
      run: |
        python_version=$(python  -V | cut -d' ' -f2)
        echo "python_version=${python_version}" >> $GITHUB_ENV

    - name: Make version file
      run: |
        printf '__commit_sha__ = "09cfe03100443fb9071bba88d5c8775ff54a9ebc"\n__time__ = "2022-07-25:15:11:05"\n' > version.py
        cp version.py "${{ github.workspace }}/app/"

    - name: Copy site-packages in workspace
      working-directory: ${{ github.workspace }}
      shell: bash
      run: |
        mkdir -p "${{ github.workspace }}/env/" && cp -fR $(poetry env list | poetry env info -p)/lib/python3.10/site-packages "${{ github.workspace }}/env/"

    - name: Install development .env file
      working-directory: ${{ github.workspace }}
      shell: bash
      run: |
        cp -f .env.example .env

    - name: set PYTHONPATH
      run: |
        echo "PYTHONPATH=/github/workspace/env/site-packages:${{ env.PYTHONPATH}}" >> $GITHUB_ENV

    - name: Checks for new endpoints against AWS WAF rules
      uses: cds-snc/notification-utils/.github/actions/waffles@b50a26d4a2c1844369640aa9de399d0b02e896b5 # 52.0.12
      with:
        app-loc: '/github/workspace'
        app-libs: '/github/workspace/env/site-packages'
        flask-mod: 'application'
        flask-prop: 'application'
        base-url: 'https://staging.notification.cdssandbox.xyz'
