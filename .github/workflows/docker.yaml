name: Build, push to AWS ECR, and deploy
on: push

env:
  AWS_REGION: ca-central-1
  DOCKER_ORG: public.ecr.aws/v6b8u5o6
  DOCKER_SLUG: public.ecr.aws/v6b8u5o6/notify-admin

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Build and push
    steps:
    - uses: actions/checkout@master
    - name: AWS auth with ECR
      uses: docker://gcr.io/cdssnc/aws:latest
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
      with:
        args: ecr-public get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $DOCKER_ORG
    - name: Build
      run: |
        docker build --build-arg GIT_SHA=${GITHUB_SHA::7} -t $DOCKER_SLUG:${GITHUB_SHA::7} -t $DOCKER_SLUG:latest -f ci/Dockerfile .
    - name: Publish
      run: |
        docker push $DOCKER_SLUG:latest && docker push $DOCKER_SLUG:${GITHUB_SHA::7}
    - name: EKS
      uses: docker://gcr.io/cdssnc/aws:latest
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      with:
        args: eks --region $AWS_REGION update-kubeconfig --name notification-canada-ca-staging-eks-cluster
    # - name: Apply
    #   uses: docker://gcr.io/cdssnc/aws-kubectl:latest
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #   with:
    #     args: set image deployment.apps/admin admin=$DOCKER_SLUG:${GITHUB_SHA::7} -n=notification-canada-ca --kubeconfig=/github/home/.kube/config
    - uses: cds-snc/notification-pr-bot@master
      env:
        TOKEN: ${{ secrets.TOKEN }}
