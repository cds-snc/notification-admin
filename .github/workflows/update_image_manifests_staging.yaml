name: Update docker image for manifests in staging

on:
  workflow_dispatch:
#   push:
#     branches:
#       - main

permissions:
  id-token: write
  contents: read

jobs:
  update-image:
    runs-on: ubuntu-latest
    steps:

      - name: Obtain a Notify PR Bot GitHub App Installation Access Token
        run: |
          TOKEN="$(npx obtain-github-app-installation-access-token@1.1.0 ci ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN_STAGING }})"
          echo "::add-mask::$TOKEN"
          echo "GITHUB_TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Checkout main branch
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          token: ${{ env.OP_SERVICE_ACCOUNT_TOKEN_STAGING }}

      - name: Checkout target repository
        uses: actions/checkout@v2
        with:
          repository: cds-snc/notification-manifests
          token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN_STAGING }}
          path: notification-manifests
          ref: main

      - name: setup git config
        run: |
          git config user.name "Notify PR Bot"
          git config user.email "action@github.com"

      - name: Make changes to the file
        run: |
          echo "Updating docker tag in staging.env"
          sed -i 's/^ADMIN_DOCKER_TAG:.*/ADMIN_DOCKER_TAG: ${GITHUB_SHA::7}/' notification-manifests/helmfile/overrides/staging.env

      - name: Branch protection OFF
        uses: octokit/request-action@v2.x
        with:
          route: PUT /repos/:repository/branches/main/protection
          repository: cds-snc/notification-manifests
          required_status_checks: null
          required_linear_history: null
          enforce_admins: null
          required_pull_request_reviews: null
          restrictions: null
        env:
          GITHUB_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN_STAGING }}

      - name: Commit
        run: |
          git add VERSION
          git commit -m "Update Admin docker image tag to ${GITHUB_SHA::7}"


  