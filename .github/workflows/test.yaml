on:
  push:
  schedule:
    - cron: '1 0-12,20-23 * * 1-5'
    - cron: '1 * * * 0,6'
name: Continuous Integration Testing
jobs:
  test:
    runs-on: ubuntu-latest
    # services:
    #   postgres:
    #     image: postgres:11.17-bullseye
    #     env:
    #       POSTGRES_USER: postgres
    #       POSTGRES_PASSWORD: postgres
    #       POSTGRES_DB: test_notification_api
    #     ports:
    #     - 5432:5432
    #     options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    #   cypress:
    #     image: cypress/included:12.16.0 
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - uses: actions/setup-python@bd6b4b6205c4dbad673328db7b31b7fab9e241c0 # v4.6.1
        with:
          python-version: '3.10'
      - uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8 # v3.7.0
        with:
          node-version: '16.x'
      - uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Write the cypress.env.json file
          # use quotes around the secret, as its value
          # is simply inserted as a string into the command
        run: |
          echo '${{ secrets.CYPRESS_ENV_JSON }}' > tests_cypress/cypress.env.json 
      - uses: cypress-io/github-action@d79d2d530a66e641eb4a5f227e13bc985c60b964 # v4.2.2
        with:
          working-directory: tests_cypress
          spec: cypress/e2e/admin/a11y/app_pages.cy.js
      # - name: Install poetry
      #   env:
      #     POETRY_VERSION: "1.3.2"
      #   run: pip install poetry==${POETRY_VERSION} && poetry --version
      # - name: Install requirements
      #   run: poetry install --with test
      # - uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
      #   with:
      #     path: ~/.npm
      #     key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-
      # - run: /bin/bash -c "scripts/bootstrap.sh && poetry run make test"
      #   env:
      #     A11Y_TRACKER_KEY: ${{ secrets.A11Y_TRACKER_KEY }}
      #     MIXPANEL_PROJECT_TOKEN: <project_token>