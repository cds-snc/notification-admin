steps:
- name: gcr.io/cloud-builders/docker
  args: ['run', '-d', '--name=postgres', '-e', 'POSTGRES_DB=notification_api', '--network=cloudbuild', 'postgres']
- name: jwilder/dockerize:0.6.1
  args: ['dockerize', '-timeout=60s', '-wait=tcp://postgres:5432']
- name: gcr.io/cloud-builders/docker
  args: 
    - run
    - -d
    - --name=api
    - -e
    - SQLALCHEMY_DATABASE_URI=postgresql://postgres@postgres/notification_api
    - --network=cloudbuild
    - gcr.io/ca-notifier/api
- name: jwilder/dockerize:0.6.1
  args: ['dockerize', '-timeout=60s', '-wait=tcp://api:6011']
- name: "gcr.io/cloud-builders/gcloud"
  args:
    - kms
    - decrypt
    - --ciphertext-file=.env.enc
    - --plaintext-file=.env
    - --location=global
    - --project=$PROJECT_ID
    - --keyring=deploy
    - --key=env
- name: "gcr.io/ca-notifier/test-env-admin@sha256:01d4a4ee15b0fe9345ed3f0dedec0bca68bdbdd3358e6f7ec240e2eaff160fb2"
  entrypoint: /bin/bash
  args: ["-c", "/workspace/scripts/bootstrap.sh && make test"]
  env:
    - 'API_HOST_NAME=http://api:6011'
options:
 machineType: 'N1_HIGHCPU_8'
